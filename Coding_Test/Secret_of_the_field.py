# 문제6 - 밭의 비밀
# solution 1
import numpy as np
첫번째밭 = [
    [1, 0, 0, 0, 0],
    [0, 0, 1, 0, 1],
    [0, 0, 1, 0, 1],
    [0, 0, 1, 0, 1],
    [0, 0, 1, 0, 1]
]

두번째밭 = [
    [0, 0, 0, 0, 1],
    [0, 0, 0, 0, 3],
    [0, 0, 0, 0, 4],
    [0, 2, 0, 0, 2],
    [4, 5, 0, 2, 0]
]

# 1: 반시계, -1: 시계방향
# 합
print(np.rot90(두번째밭, 1)+np.array(첫번째밭))
print('-----------------------------------')
# 뺄셈
print(np.array(첫번째밭)-np.rot90(두번째밭, 1))
print('-----------------------------------')
# 곱
print(np.array(첫번째밭)*np.rot90(두번째밭,1))
print('-----------------------------------')
# 행렬의 곱
print(np.array(첫번째밭) @ np.rot90(두번째밭, 1))
print('-----------------------------------')

# 8진법으로 풀어야함
정답 = np.rot90(두번째밭, 1) + np.array(첫번째밭)
print(정답)
print(''.join([str(i) for i in 정답[0]]))
print(int(''.join([str(i) for i in 정답[0]]), 8))
print(chr(int(''.join([str(i) for i in 정답[1]]), 8)))
print('-----------------------------------')
for k in range(5):
    print(chr(int(''.join([str(i) for i in 정답[k]]),8)))


# solution 2
sample = [
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
]

두번째밭 = [
    [0, 0, 0, 0, 1],
    [0, 0, 0, 0, 3],
    [0, 0, 0, 0, 4],
    [0, 2, 0, 0, 2],
    [4, 5, 0, 2, 0]
]

'''
0, 4 -> 0, 0
1, 4 -> 0, 1
2, 4 -> 0, 2
3, 4 -> 0, 3
4, 4 -> 0, 4

0, 3 -> 1, 0
1, 3 -> 1, 1
2, 3 -> 1, 2
3, 3 -> 1, 3
4, 3 -> 1, 4

0, 2 -> 2, 0
1, 2 -> 2, 1
2, 2 -> 2, 2
3, 2 -> 2, 3
4, 2 -> 2, 4

0, 1 -> 3, 0
1, 1 -> 3, 1
2, 1 -> 3, 2
3, 1 -> 3, 3
4, 1 -> 3, 4

0, 0 -> 4, 0
1, 0 -> 4, 1
2, 0 -> 4, 2
3, 0 -> 4, 3
4, 0 -> 4, 4
'''

for i in range(len(두번째밭)):
    for j in range(len(두번째밭[0])):
        sample[i][j] = 두번째밭[j][len(두번째밭)-1-i]
print(sample)

print('-----------------------------------------')

for i in range(len(첫번째밭)):
    for j in range(len(첫번째밭[0])):
        sample[i][j] += 첫번째밭[i][j]

print(sample)